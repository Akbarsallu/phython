{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b0195b32-985d-4470-8294-18369037c6df",
   "metadata": {},
   "outputs": [],
   "source": [
    "Methods are by default builtin programs that we can use."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8d0dd4e1-b130-4f34-b710-fd81d71998ce",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "edad2967-1835-4245-8bbb-2dc6c69056c3",
   "metadata": {},
   "outputs": [],
   "source": [
    "type(name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f978024f-1218-4fe4-b0a7-2715bb03a1ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "str"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6c600951-cae0-4784-9445-32d8cf5dd5c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "type -----> it is used to validate the data type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1c21ebc6-43a7-447c-81f1-7e4be1d83ab4",
   "metadata": {},
   "outputs": [],
   "source": [
    "string------>str"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "54b52cc1-9f27-47c2-8d3f-e1e2e10bd98f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e8241cc0-e91e-47cf-9aa1-62e6eed3f8e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "akbar salman\n"
     ]
    }
   ],
   "source": [
    "full_name = 'akbar salman'\n",
    "\n",
    "print(full_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f0368dec-df77-49fd-b2fb-2d7013f5aa02",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "593bdc43-3999-4e65-a95a-6e87a563fc13",
   "metadata": {},
   "outputs": [],
   "source": [
    "#reg : I want to get the complete name in capital letters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7651e522-056d-451c-bf49-92997bade30f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "AKBAR SALMAN\n"
     ]
    }
   ],
   "source": [
    "print(full_name.upper())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4b33064d-a8f7-44d9-b46a-e21e8149221b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#reg : I want to get the complete name in small letters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "da974a72-9f38-42f7-8061-a39f5d4ea3ff",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "akbar salman\n"
     ]
    }
   ],
   "source": [
    "print(full_name.lower())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e5f2a33f-5b6b-4fa5-bb18-aa59d2cfebd3",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "43f8b858-9a01-4e21-a5b6-7fa3392c882c",
   "metadata": {},
   "outputs": [],
   "source": [
    "introduction of f strings :"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f73bff35-d8bc-439c-84c1-fbcf9fc9e8db",
   "metadata": {},
   "outputs": [],
   "source": [
    "# general syntax of f strings:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b0bcfe8e-df4c-4855-a153-b99b740ba90f",
   "metadata": {},
   "outputs": [],
   "source": [
    "f\" custom words {placeholder1}  {placeholder2}......{placeholder..n}\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8f6ffa7b-c962-4648-b35e-7893100f0491",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "8c52a92d-b506-4057-9253-347f036e899c",
   "metadata": {},
   "outputs": [],
   "source": [
    "firstname = 'miya'\n",
    "\n",
    "lastname = 'bhai' "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "813c78e1-f235-4588-af5a-f5e9f06d0b2a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#req : I want to get fullname ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "231a0a8a-fb0d-4fa6-b2d0-2fe2728dca06",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "miya bhai\n"
     ]
    }
   ],
   "source": [
    "fullname = f\"{firstname} {lastname}\"\n",
    "\n",
    "print(fullname)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "bed4a96d-7078-45d4-9b56-897f9eac7c14",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "keep up the work, Miya Bhai\n"
     ]
    }
   ],
   "source": [
    "message = f\"keep up the work, {fullname.title()}\"\n",
    "print(message)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7cf5fb54-691b-41b6-8170-c0f202c6036f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e2e90e05-3ac1-4465-99c3-eab6c9b66d34",
   "metadata": {},
   "outputs": [],
   "source": [
    "adding whitepages to string :"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f4547cb9-5209-4d31-8bcb-8248e43ea45a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "d4e87d87-e0e0-4a40-9f87-24cbee8fc7b2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "favourite_language:pythonc++javaswiftccobal\n"
     ]
    }
   ],
   "source": [
    "print(\"favourite_language:pythonc++javaswiftccobal\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7312ceea-6665-4009-914c-f4e4e298a0fc",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "bfa9a607-9c12-4f6d-9f51-5442722bf2fc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "favourite_language:\n",
      "python\n",
      "c++\n",
      "java\n",
      "swift\n",
      "c\n",
      "cobal\n"
     ]
    }
   ],
   "source": [
    "print(\"favourite_language:\\npython\\nc++\\njava\\nswift\\nc\\ncobal\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dc7fb0df-9efd-49da-a482-2c93e3a64b8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "\\n -----> new line delimiter "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dcb95f89-b02b-4298-8d73-dfe185634384",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "93da59c9-b27a-420b-9429-79ab78931de5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "favourite_language:\n",
      "\tpython\n",
      "\tc++\n",
      "\tjava\n",
      "\tswift\\ntc\n",
      "\tc\n",
      "\tcobal\n"
     ]
    }
   ],
   "source": [
    "print(\"favourite_language:\\n\\tpython\\n\\tc++\\n\\tjava\\n\\tswift\\\\ntc\\n\\tc\\n\\tcobal\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "97c04685-a0a0-485e-9b53-a8029d1ba379",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "python\n"
     ]
    }
   ],
   "source": [
    "name = 'python'\n",
    "\n",
    "print(name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "05ee4e4d-210d-42fd-81a0-10c8e35c502c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "73466654-38c4-4368-8ad0-8c06c5e07525",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   python\n"
     ]
    }
   ],
   "source": [
    "name2 = '   python'    # lest side\n",
    "print(name2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3449ee59-dbd3-41e8-b1ba-328d96fb01e5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "6f0b36d5-0673-491a-bc4d-f72a0fc75439",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "python     \n"
     ]
    }
   ],
   "source": [
    "name3 = 'python     '\n",
    "print(name3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "652b70d7-d24d-40a7-8aa7-a16095a96c22",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'python'"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "name2.lstrip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "a2985b89-a04e-4d5f-b52d-4e826981d5f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'python'"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "name3.rstrip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "b2024114-f6e6-43c1-99e8-2d201f989033",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "python\n"
     ]
    }
   ],
   "source": [
    "name4 = '   python  '\n",
    "print(name)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
